---
apiVersion: v1
kind: List
items:
-
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      name: mongo
    name: mongo-controller
  spec:
    template:
      metadata:
        labels:
          name: mongo
        name: mongo-controller
      spec:
        containers:
        - image: mongo
          name: mongo
          ports:
          - name: mongo
            containerPort: 27017
          volumeMounts:
              - name: mongo-persistent-storage
                mountPath: /data/db
        volumes:
          - name: mongo-persistent-storage
            persistentVolumeClaim:
              claimName: mongo-persistent-storage
-
  apiVersion: v1
  kind: Service
  metadata:
    name: mongo
    labels:
      name: mongo
    name: mongo
  spec:
    ports:
      - port: 27017
        targetPort: 27017
    selector:
      name: mongo
-
  apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: mongo-persistent-storage
  spec:
    accessModes:
     - ReadWriteOnce
    resources:
      requests:
        storage: 3Gi
-
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: web
    labels:
      app: nodejs
  spec:
    replicas: 2
    selector:
      name: web
    template:
      metadata:
        labels:
          app: nodejs
        name: web-controller
      spec:
        containers:
        - image: node:0.10.40
          command: ['tail', '-f', '/dev/null']
          args: []
          name: web
          ports:
          - containerPort: 3000
            name: http-server
          volumeMounts:
           - mountPath: /projects
             name: projects
        volumes:
         - name: projects
           persistentVolumeClaim:
             claimName: projects
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: projects
  spec:
    accessModes:
     - ReadWriteOnce
    resources:
      requests:
        storage: 2Gi
-
  apiVersion: v1
  kind: Service
  metadata:
    name: web
    labels:
      name: web
  spec:
    type: LoadBalancer
    ports:
      - name: web
        port: 80
        targetPort: 3000
        protocol: TCP
    selector:
      app: nodejs
- apiVersion: v1
  kind: Route
  metadata:
    name: che
  spec:
    to:
      kind: Service
      name: web
    port:
      targetPort: web
